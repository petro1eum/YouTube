#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∞–Ω–∞–ª–∏–∑–∞ –≤–∏–¥–µ–æ
"""

import time
import os
import json
from datetime import datetime

def monitor_analysis():
    """–û—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å –∞–Ω–∞–ª–∏–∑–∞"""
    
    print("üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∞–Ω–∞–ª–∏–∑–∞ –≤–∏–¥–µ–æ")
    print("=" * 50)
    
    # –ü–∞–ø–∫–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    cache_dir = "cache"
    results_dir = "optimized_results"
    
    # –§–∞–π–ª—ã –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
    video_id = "c716d82418a0df0bdc9a276c1ea9ac24"
    
    files_to_check = {
        "üìù –¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç": f"{cache_dir}/{video_id}_transcript_segments.json",
        "üìÑ –ü–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç": f"{cache_dir}/{video_id}_transcript_full.txt",
        "üìä –ê–Ω–∞–ª–∏–∑": f"{cache_dir}/{video_id}_analysis.json",
        "üéØ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã": f"{results_dir}/–ó–∞–ø–∏—Å—å –≤—Å—Ç—Ä–µ—á–∏ 09.07.2025 10-52-18 - –∑–∞–ø–∏—Å—å_analysis.md"
    }
    
    last_status = {}
    
    while True:
        os.system('clear' if os.name == 'posix' else 'cls')
        print(f"üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∞–Ω–∞–ª–∏–∑–∞ –≤–∏–¥–µ–æ - {datetime.now().strftime('%H:%M:%S')}")
        print("=" * 50)
        
        all_done = True
        
        for name, filepath in files_to_check.items():
            if os.path.exists(filepath):
                size = os.path.getsize(filepath) / 1024 / 1024  # –í MB
                mtime = datetime.fromtimestamp(os.path.getmtime(filepath))
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
                is_new = filepath not in last_status
                is_growing = last_status.get(filepath, {}).get('size', 0) < size
                
                status = "‚úÖ –ì–æ—Ç–æ–≤–æ"
                if is_new:
                    status = "üÜï –°–æ–∑–¥–∞–Ω"
                elif is_growing:
                    status = "üìà –û–±–Ω–æ–≤–ª—è–µ—Ç—Å—è"
                    all_done = False
                
                print(f"{name}: {status} ({size:.1f} MB) - {mtime.strftime('%H:%M:%S')}")
                
                last_status[filepath] = {'size': size, 'mtime': mtime}
            else:
                print(f"{name}: ‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ...")
                all_done = False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ—Ü–µ—Å—Å
        print("\n" + "-" * 50)
        ps_output = os.popen("ps aux | grep 'python.*updated-video-analyzer' | grep -v grep").read()
        if ps_output:
            print("üöÄ –ü—Ä–æ—Ü–µ—Å—Å –∞–∫—Ç–∏–≤–µ–Ω")
            # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ CPU
            cpu_usage = ps_output.split()[2]
            print(f"   CPU: {cpu_usage}%")
        else:
            print("‚ùå –ü—Ä–æ—Ü–µ—Å—Å –Ω–µ –Ω–∞–π–¥–µ–Ω")
            if all_done:
                print("\n‚úÖ –ê–ù–ê–õ–ò–ó –ó–ê–í–ï–†–®–ï–ù!")
                break
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –ª–æ–≥–æ–≤ –µ—Å–ª–∏ –µ—Å—Ç—å
        if os.path.exists(f"{cache_dir}/{video_id}_transcript_full.txt"):
            print("\nüìú –ü–æ—Å–ª–µ–¥–Ω–∏–π –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π —Ñ—Ä–∞–≥–º–µ–Ω—Ç:")
            with open(f"{cache_dir}/{video_id}_transcript_full.txt", 'r', encoding='utf-8') as f:
                content = f.read()
                last_200_chars = content[-200:] if len(content) > 200 else content
                print(f"...{last_200_chars}")
        
        time.sleep(5)  # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥
    
    print("\n‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω!")
    print(f"üìÅ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ –ø–∞–ø–∫–µ: {results_dir}/")

if __name__ == "__main__":
    monitor_analysis() 